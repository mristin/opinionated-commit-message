import fs from 'fs';
import path from 'path';

import * as mostFrequentEnglishVerbs from '../mostFrequentEnglishVerbs';

/* eslint no-console: "off" */

/**
 * This script translates the most frequent verbs into the powershell
 * script.
 */

const verbRe = /^[a-z-_0-9]+$/;

function main(): void {
  const repoRoot = path.dirname(path.dirname(__dirname));
  const templatePath = path.join(
    repoRoot,
    'local',
    'powershell',
    'OpinionatedCommitMessage.ps1.template'
  );

  const packageJson = JSON.parse(
    fs.readFileSync(path.join(repoRoot, 'package.json'), {encoding: 'utf-8'})
  );

  const version = packageJson.version;

  if (!fs.existsSync(templatePath)) {
    throw new Error(
      `Could not find the powershell script template: ${templatePath}`
    );
  }

  const verbs = new Array<string>(...mostFrequentEnglishVerbs.SET);
  verbs.sort((a, b) => a.localeCompare(b));

  const lines = ['$frequentVerbs = @('];
  for (const [i, verb] of verbs.entries()) {
    if (!verb.match(verbRe)) {
      throw new Error(`Unexpected verb not matching ${verbRe}: ${verb}`);
    }

    if (i < verbs.length - 1) {
      lines.push(`'${verb}',`);
    } else {
      lines.push(`'${verb}'`);
    }
  }
  lines.push(')');

  const verbsText = `${lines.join('\n')}\n`;

  const outPath = path.join(
    path.dirname(templatePath),
    'OpinionatedCommitMessage.ps1'
  );

  const text = fs.readFileSync(templatePath, {encoding: 'utf-8'});
  const newText =
    `${text
      .replace(
        '#!/usr/bin/env pwsh',
        '#!/usr/bin/env pwsh\n' +
          '# This file was generated by src/scripts/toPowershell.ts. ' +
          'Do NOT edit or append!\n' +
          `# Version: ${version}\n` +
          '# Copyright (c) 2020 Marko Ristin <https://github.com/mristin/opinionated-commit-message>\n' +
          '# MIT License\n'
      )
      .replace(
        '$frequentVerbs = @()',
        verbsText
      )}\n# This file was generated by src/scripts/toPowershell.ts. ` +
    `Do NOT edit or append!`;

  fs.writeFileSync(outPath, newText);
  console.log(`Generated code to: ${outPath}`);
}

main();
